<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.develup.noramore" />
	
	<!-- 파일 다운을 위한 뷰클래스 실행하는 뷰리졸버 등록함
		주의 : id 속성을 지정하면 안됨
		여러 개의 뷰리졸버를 등록할 때는 실행 순서를 정해야 함
		파일 다운용 뷰리졸버가 반드시 맨처음 실행되게 순서를 지정함
		컨트롤러 메소드가 리턴하는 뷰이름과 일치하는 뷰클래스가 있으면, 
		자동으로 해당 뷰클래스가 실행되게 함
	 -->
	 <beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
	 	<beans:property name="order" value="0" />
	 	<!-- 제일 먼저 실행되도록 순번 지정함 -->
	 </beans:bean>
	
	<!-- 컨트롤러가 리턴한 jsonString 내보내는 뷰리졸버를 추가 등록해야 함
		pom.xml 에 dependency 로 추가해서 사용해야 함 
	 -->
	<beans:bean class="net.sf.json.spring.web.servlet.view.JsonView" id="jsonView"></beans:bean>
	
	<!-- 파일업로드용 클래스 등록 : 업로드시 파일 용량 제한 설정도 함께 해야 함 (대략 10메가바이트) -->
	<beans:bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" 
		id="multipartResolver">
		<beans:property name="maxUploadSize" value="10000000" />	 
	</beans:bean>

	

	<!-- <aop:aspectj-autoproxy proxy-target-class="true" /> -->
	
	<!-- mvc 탭에서 등록 처리함 -->
	<!-- <interceptors>
		로그인 상태에서 요청하는 서비스 체크용 인터셉터
		<interceptor>
			<mapping path="/bwform.do" />
			<mapping path="/myinfo.do" />
			<mapping path="/moveup.do" />
			<mapping path="/breplyform.do" />
		
			<beans:bean class="com.develup.noramore.common.intercepter.LoginCheckIntercepter" 
						id="loginCheckIntercepter" />
		</interceptor>
		
		인터셉터 작동 위치 확인용 로그 인터셉터
		<interceptor>
			모든 요청
			<mapping path="/**" />
			제외 처리
			<exclude-mapping path="/main.do" />
			
			<beans:bean class="com.develup.noramore.common.intercepter.LoggerInterceptor" 
			id="loggerInterceptor" />
		</interceptor>
	</interceptors> -->
	
</beans:beans>
